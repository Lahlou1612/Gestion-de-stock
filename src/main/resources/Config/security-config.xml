<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Intercepter les URL par Spring -->
	<s:http auto-config="true">
		<!-- Définir les Rôles Utilisateur -->
		<s:intercept-url pattern="/client/" access="ROLE_ADMIN, ROLE_USER" />
		<s:intercept-url pattern="/client/**" access="ROLE_ADMIN" />
		<s:intercept-url pattern="/utilisateur/" access="ROLE_ADMIN" />
		<s:intercept-url pattern="/utilisateur/**" access="ROLE_ADMIN" />
		
		<!-- Page d'autentification -->				
		<s:form-login login-page="/login" default-target-url="/home" 
		login-processing-url="/j_spring_security_check" authentication-failure-url="/failedlogin" 
		username-parameter="j_username" password-parameter="j_password"/>
		
		<!-- Pour empêcher les utilisateurs qui veulent accéder à des pages non autorisée Gestion des droits d'accès au données-->
		<s:access-denied-handler error-page="/403/"/>
		
		<!-- Gérer le Logout -->
		<s:logout logout-success-url="/login" delete-cookies="JSESSIONID" />
		</s:http>
	
	<s:authentication-manager>
		<s:authentication-provider>
<!-- 			<s:password-encoder hash="md5" /> -->
			<s:jdbc-user-service data-source-ref="dataSource" 
			users-by-username-query="select mail, motDePasse, actived from utilisateur where mail=?" 
			authorities-by-username-query="select u.mail, r.roleName from utilisateur u, roles r 
			where u.idUtilisateur = r.idUtilisateur and u.mail =?"/>
		</s:authentication-provider>
	</s:authentication-manager>

</beans>